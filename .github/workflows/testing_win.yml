name: Testing Windows

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
    - run: git config --global core.autocrlf input
    - uses: actions/checkout@v2

    - name: Prereqs
      uses: cygwin/cygwin-install-action@master
      with:
        packages: gcc-g++ make cmake python3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: bash -eo pipefail -c cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DRUN_TESTS=ON

    - name: Build
      # Build your program with the given configuration
      run: bash -eo pipefail -c cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Copy Data & Script
      run: |
        bash -eo pipefail -c cp -r ${{github.workspace}}/examples/data ${{github.workspace}}/build/examples/
        bash -eo pipefail -c cp -r ${{github.workspace}}/examples/run_all_tests.py ${{github.workspace}}/build/examples/

    - name: Run Examples
      working-directory: ${{github.workspace}}/build/examples
      run: bash -eo pipefail -c python3 run_all_tests.py

    - name: Run Tests
      working-directory: ${{github.workspace}}/build
      run: bash -eo pipefail -c ctest -V
      
